<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wjs.questionnaire.mapper.OptionMapper">

    <!-- 查询 option 表所有字段 -->
    <sql id="selectOptionFields">
        option_id, option_content, question_id, option_create_time
    </sql>

    <!-- 插入 option 表字段 -->
    <sql id="insertOptionFields">
        option_id, option_content, question_id, option_create_time
    </sql>

    <!-- 根据 qId 查询当前问题的所有选项（不分页） -->
    <!-- List<OptionEntity> findOptionByQId(String qId); -->
    <select id="findOptionByQId" resultType="OptionEntity">
        SELECT
        <include refid="selectOptionFields"></include>
        FROM `option`
        WHERE question_id = #{questionId}
        ORDER BY option_create_time ASC
    </select>

    <!-- 根据 qId 查询当前问题的所有选项的行数 -->
    <!-- int findOptionRowsByQId(String qId); -->
    <select id="findOptionRowsByQId" resultType="int">
        SELECT COUNT(option_id)
        FROM `option`
        WHERE question_id = #{qId}
    </select>

    <!-- 根据 qId 查询当前问题的所有选项（分页） -->
    <!-- List<OptionEntity> findOptionPageByQId(String qId, int offset, int limit); -->
    <select id="findOptionPageByQId" resultType="OptionEntity">
        SELECT
        <include refid="selectOptionFields"></include>
        FROM `option` o
        WHERE o.question_id = #{qId}
        ORDER BY o.option_create_time ASC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 获取所有问卷的所有问题的所有选项信息列表（不分页） -->
    <!-- List<OptionEntity> findAllOptionList(); -->
    <select id="findAllOptionList" resultType="OptionEntity">
        SELECT
        <include refid="selectOptionFields"></include>
        FROM `option`
        ORDER BY option_create_time DESC
    </select>

    <!-- 获取所有问卷的所有问题的所有选项信息列表的行数 -->
    <!-- int findAllOptionRows(); -->
    <select id="findAllOptionRows" resultType="int">
        SELECT COUNT(option_id)
        FROM `option`
    </select>

    <!-- 获取所有问卷的所有问题的所有选项信息列表（分页） -->
    <!-- List<OptionEntity> findAllOptionPage(int offset, int limit); -->
    <select id="findAllOptionPage" resultType="OptionEntity">
        SELECT
        <include refid="selectOptionFields"></include>
        FROM `option`
        ORDER BY option_create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 获取模糊查询 选项内容 的选项信息列表的行数 -->
    <!-- int findLikeOptionRowsByoContent(String oContent); -->
    <select id="findLikeOptionRowsByoContent" resultType="int">
        SELECT COUNT(option_id)
        FROM `option`
        WHERE option_content LIKE CONCAT(CONCAT('%',#{oContent},'%'))
    </select>

    <!-- 获取模糊查询 选项内容 的选项信息列表（分页） -->
    <!-- List<OptionEntity> findLikeOptionPageByoContent(String oContent, int offset, int limit); -->
    <select id="findLikeOptionPageByoContent" resultType="OptionEntity">
        SELECT
        <include refid="selectOptionFields"></include>
        FROM `option`
        WHERE option_content LIKE CONCAT(CONCAT('%',#{oContent},'%'))
        ORDER BY option_create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 根据 oId 查询选项信息 -->
    <!-- OptionEntity findOptionByOId(String oId); -->
    <select id="findOptionByOId" resultType="OptionEntity">
        SELECT
        <include refid="selectOptionFields"></include>
        FROM `option`
        WHERE option_id = #{oId}
    </select>

    <!-- 保存选项信息 -->
    <!-- int insertOption(OptionEntity q); -->
    <insert id="insertOption" parameterType="OptionEntity">
        INSERT INTO `option`(<include refid="insertOptionFields"></include>)
        VALUES(#{optionId}, #{optionContent}, #{questionId}, #{optionCreateTime})
    </insert>

    <!-- 更新选项信息 -->
    <!-- int updateOptionByOId(OptionEntity o); -->
    <update id="updateOptionByOId" parameterType="OptionEntity">
        UPDATE `option`
        <set>
            <if test="optionContent != null">
                option_content = #{optionContent},
            </if>
            <if test="questionId != null">
                question_id = #{questionId},
            </if>
            <if test="optionCreateTime != null">
                option_create_time = #{optionCreateTime},
            </if>
        </set>
        WHERE option_id = #{optionId}
    </update>

    <!-- 删除选项信息 -->
    <!-- int deleteOptionByOId(String oId); -->
    <delete id="deleteOptionByOId" parameterType="OptionEntity">
    DELETE FROM `option`
    WHERE option_id = #{oId}
    </delete>

</mapper>
